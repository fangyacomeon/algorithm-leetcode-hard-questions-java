public class Solution {
    public void solveSudoku(char[][] board) {
        if(board == null || board.length == 0){
            return;       
        }
        solve(board);  
    }
    
    public boolean solve(char[][] board){
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(board[i][j] == '.'){
                    for(char x = '1'; x <= '9'; x++){
                        if(isValid(board, i, j, x) ){
                            board[i][j] = x;
                            if(solve(board)) {
                                return true;
                            } else {
                                board[i][j] = '.';
                            } 
                        } 
                    }
                    return false;
                }
            }
        }
        return true;
    }

    private boolean isValid(char[][] board,int i,int j,char x){
        boolean[] arr = new boolean[10];
        arr[x -'0'] = true;
        for(int a = 0 ; a < board[0].length; a++){
            if(board[i][a] != '.'){
                if(arr[board[i][a] -'0'] && a != j) {
                    return false;
                }
                arr[board[i][a] -'0'] = true;
            }
        }
        
        Arrays.fill(arr, false);
        arr[x -'0'] = true;
        for(int a = 0; a < board.length; a++){
            if(board[a][j] !='.' && a != i) {
                if(arr[board[a][j] -'0']){
                    return false;
                }
                arr[board[a][j]-'0']= true;
            }
        }
        
        Arrays.fill(arr,false);
        arr[x -'0'] = true;
        
        int b = i / 3;  
        int c = j / 3; 
        
        for(int d = b*3; d < b*3 + 3; d++){
            for(int e = c*3; e < c*3+ 3; e++){
                if(board[d][e] !='.' && !(d== i && e == j)){
                    if(arr[board[d][e]-'0']) {
                        return false;
                    }
                    arr[board[d][e]-'0'] = true;
                }
            }
           
        }
        return true;
    }
}